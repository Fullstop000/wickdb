language: rust
cache: cargo
sudo: required

branches:
  only:
    - master

os:
  - linux
  # - windows
  - osx

rust:
  - stable
  - nightly

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true

before_install:
  - curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -

install:
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then rustup component add rustfmt; fi
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then rustup component add clippy; fi

before_script:
  - export PATH=/usr/bin/:$HOME/.cargo/bin:$PATH

script:
  - echo $TRAVIS_RUST_VERSION
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then cargo fmt -- --check; fi
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then cargo clippy --all; fi
  - cargo build --verbose --all
  - cargo clean
  - |
    if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [ $TRAVIS_OS_NAME == "linux" ]; then
      export CARGO_INCREMENTAL=0;
      export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort";
      export RUSTDOCFLAGS="-Cpanic=abort";
      sed -i s/stable/nightly/g rust-toolchain
    fi
  - cargo test --verbose --all
  - |
    if [ $TRAVIS_OS_NAME == "linux" ] && [ $TRAVIS_RUST_VERSION == "nightly" ]; then
      zip -0 ccov.zip `find . \( -name "wickdb*.gc*" \) -print`;
      ./grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info;
      bash <(curl -s https://codecov.io/bash) -f lcov.info;
    fi
env:
  global:
    - RUST_BACKTRACE=1
