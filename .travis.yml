language: rust
cache: cargo
sudo: required

branches:
  only:
  - master

os:
  - linux
  - windows
  - osx

rust:
  - stable
  - nightly

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - libbfd-dev
      - binutils-dev
      - libiberty-dev

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true

install:
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then rustup component add rustfmt; fi
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then rustup component add clippy; fi
  - if [ $TRAVIS_OS_NAME = osx ]; then pip install six; fi

before_script:
  - export PATH=/usr/bin/:$HOME/.cargo/bin:$PATH

script:
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then cargo fmt -- --check; fi
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]]; then cargo clippy --all; fi
  - cargo build --verbose --all
  - cargo test --verbose --all

after_success:
  - |
    if [ $TRAVIS_OS_NAME = "linux" ]; then   
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
        tar xzf master.tar.gz
        cd kcov-master
        mkdir build
        cd build
        cmake ..
        make
        make install DESTDIR=../../kcov-build
        cd ../..
        rm -rf kcov-master
        for file in target/debug/wickdb-*; 
            do [ -x "${file}" ] || continue; 
            mkdir -p "target/cov/$(basename $file)";
            ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; 
        done
        bash <(curl -s https://codecov.io/bash)
        echo "Uploaded code coverage";
     fi
  - |
env:
  global:
    - RUST_BACKTRACE=1
